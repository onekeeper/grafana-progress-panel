{"version":3,"sources":["../src/unit.js"],"names":["kbn","_","unitObj","checkSeries","targets","series","seriesFull","length","fillFlag","i","j","sLen","item","filter","target","push","splice","datapoints","checkProgressArr","source","map","so","value","valueShow","percent","hasOwnProperty","getDecimalsForValue","panel","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","formatValue","format","decimalInfo","formatFunc","valueFormats"],"mappings":"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","file":"unit.js","sourcesContent":["import kbn from 'app/core/utils/kbn';\r\nimport _ from 'lodash';\r\n\r\n/**\r\n*public unit method\r\n*/\r\nlet unitObj = {\r\n\tcheckSeries: function (targets, series) {\r\n\t\tlet seriesFull = [];\r\n\t\tif (targets.length == series.length) {\r\n\t\t\treturn seriesFull = series;\r\n\t\t} else {\r\n\t\t\tlet fillFlag = false;\r\n\t\t\tfor (var i = 0, length = targets.length; i < length; i++) {\r\n\t\t\t\tfor (var j = 0, sLen = series.length; j < sLen; j++) {\r\n\t\t\t\t\tif (targets[i].item.filter == series[j].target) {\r\n\t\t\t\t\t\tseriesFull.push(series[j]);\r\n\t\t\t\t\t\tfillFlag = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfillFlag = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (fillFlag) {\r\n\t\t\t\t\tif (targets[i].item && targets[i].item.filter) {\r\n\t\t\t\t\t\tseriesFull.splice(i, 0, { 'target': targets[i].item.filter, datapoints: [] });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseriesFull.splice(i, 0, { 'target': '', datapoints: [] });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn seriesFull;\r\n\t},\r\n\tcheckProgressArr: function (source, target) {\r\n\t\tif (source.length == target.length) {\r\n\t\t\treturn target;\r\n\t\t} else {\r\n\t\t\ttarget = _.map(source, (so, i) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: so.value || '',\r\n\t\t\t\t\tvalueShow: so.valueShow || '',\r\n\t\t\t\t\tpercent: so.percent || 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\t/*针对之前部署的信息*/\r\n\t\t\t_.map(source, (so, i) => {\r\n\t\t\t\tso.hasOwnProperty(\"value\") && delete so.value;\r\n\t\t\t\tso.hasOwnProperty(\"valueShow\") && delete so.valueShow;\r\n\t\t\t\tso.hasOwnProperty(\"percent\") && delete so.percent;\r\n\t\t\t});\r\n\t\t\treturn target;\r\n\t\t}\r\n\t},\r\n\tgetDecimalsForValue: function (panel, value) {\r\n\t\tif (_.isNumber(panel.decimals)) {\r\n\t\t\treturn { decimals: panel.decimals, scaledDecimals: null };\r\n\t\t}\r\n\r\n\t\tvar delta = value / 2;\r\n\t\tvar dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n\t\tvar magn = Math.pow(10, -dec);\r\n\t\tvar norm = delta / magn; // norm is between 1.0 and 10.0\r\n\t\tvar size;\r\n\r\n\t\tif (norm < 1.5) {\r\n\t\t\tsize = 1;\r\n\t\t} else if (norm < 3) {\r\n\t\t\tsize = 2;\r\n\t\t\t// special case for 2.5, requires an extra decimal\r\n\t\t\tif (norm > 2.25) {\r\n\t\t\t\tsize = 2.5;\r\n\t\t\t\t++dec;\r\n\t\t\t}\r\n\t\t} else if (norm < 7.5) {\r\n\t\t\tsize = 5;\r\n\t\t} else {\r\n\t\t\tsize = 10;\r\n\t\t}\r\n\r\n\t\tsize *= magn;\r\n\r\n\t\t// reduce starting decimals if not needed\r\n\t\tif (Math.floor(value) === value) { dec = 0; }\r\n\r\n\t\tvar result = {};\r\n\t\tresult.decimals = Math.max(0, dec);\r\n\t\tresult.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n\t\treturn result;\r\n\t},\r\n\tformatValue: function (panel, value, format) {\r\n\t\tvar decimalInfo = this.getDecimalsForValue(panel, value);\r\n\t\tvar formatFunc = kbn.valueFormats[format];\r\n\t\tif (formatFunc) {\r\n\t\t\treturn formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n};\r\n\r\nexport default unitObj;\r\n\r\n"]}