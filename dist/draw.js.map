{"version":3,"sources":["../src/draw.js"],"names":["defaultOpt","width","height","padding","gutter","colors","bgColor","data","option","opt","dom","toRadian","angle","Math","PI","toAngle","radian","calLineTo","a","r","x","cos","y","sin","doughnut","drawSize","Num","length","cv","ctx","getContext","ctx2","x0","y0","radius","radiusInSide","startAngle","step","forEach","value","index","beginPath","fillStyle","moveTo","arc","fill","lineTo","strokeStyle","lineWidth","stroke","closePath","Draw"],"mappings":"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","file":"draw.js","sourcesContent":["let defaultOpt = {\r\n    width: 150,\r\n    height: 150,\r\n    padding: 10,\r\n    gutter: 0,\r\n    colors: [\r\n        \"#67C23A\", //绿色 \r\n        \"gold\", \r\n        \"#409EFF\", //蓝色 \r\n        \"#F56C6C\", //红色\r\n        \"grey\", \r\n        \"#E6A23C\",  //橙色\r\n        \"LightPink\", \r\n        \"black\", \r\n        \"yellow\", \r\n        \"white\"\r\n    ],\r\n    bgColor: \"#1f1d1d\",\r\n    data: [1,2,3,4],\r\n}\r\nlet option = (opt)=>{\r\n\treturn {\r\n        dom: opt.dom,\r\n        width: opt.width ? opt.width : defaultOpt.width,\r\n        height: opt.height ? opt.height : defaultOpt.height,\r\n        padding: defaultOpt.padding,\r\n        gutter: defaultOpt.gutter,\r\n        colors: defaultOpt.colors,\r\n        bgColor: defaultOpt.bgColor,\r\n        data: opt.data ? opt.data : defaultOpt.data,\r\n\t}\r\n}\r\nlet toRadian = (angle)=>{\r\n    return angle / 180 * Math.PI;\r\n}\r\nlet toAngle = (radian)=>{\r\n    return radian / Math.PI * 180;\r\n}\r\nlet calLineTo = (a, r)=>{\r\n    a = -90 + a; \r\n    let x = Math.cos(a * 2 * Math.PI / 360) * r;\r\n    let y = Math.sin(a * 2 * Math.PI / 360) * r;\r\n    return {x:x, y:y}\r\n}\r\nlet doughnut = (opt)=>{\r\n    // console.log(\"draw.js/doughnut is run.\");\r\n    // console.log(\"opt\",opt);\r\n    let drawSize = (opt.width <= opt.height ? opt.width : opt.height);\r\n    let Num = opt.data.length;\r\n    let cv = opt.dom;\r\n    let ctx = cv.getContext(\"2d\");\r\n    let ctx2 = cv.getContext(\"2d\");\r\n\r\n    // --------------------------------------//\r\n    var x0 = (opt.width - opt.padding * 2) / 2 + opt.padding , y0 = (opt.height - opt.padding * 2) / 2 + opt.padding,\r\n    radius = (drawSize - opt.padding * 2) / 2,\r\n    radiusInSide = radius * 0.75,\r\n    startAngle = -90,\r\n    step = 360 / Num;\r\n    // let colors = opt.colors.slice(0, opt.data.length);\r\n    let colors = opt.data;\r\n\r\n    // 绘制饼图\r\n    colors.forEach(function(value, index) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = value;\r\n        ctx.moveTo(x0, y0);\r\n        ctx.arc(x0, y0, radius, toRadian(startAngle), toRadian(startAngle+=step));\r\n        ctx.fill();\r\n    });\r\n    // 绘制分割线\r\n    colors.forEach(function(value, index) {\r\n        let lineTo = calLineTo(step * index, radius);\r\n        ctx2.beginPath();\r\n        ctx2.strokeStyle = opt.bgColor;\r\n        ctx2.lineWidth  = radius / 20;\r\n        ctx2.moveTo(x0, y0);\r\n        ctx2.lineTo(x0 + lineTo.x, y0 + lineTo.y);\r\n        ctx2.stroke();\r\n        ctx2.closePath();\r\n    });\r\n    // 绘制内部圆\r\n    ctx.beginPath();\r\n    ctx.fillStyle=opt.bgColor;\r\n    ctx.moveTo(x0, y0);\r\n    ctx.arc(x0 , y0 , radiusInSide, 0, 360,false);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n}\r\n\r\nlet Draw = (opt) => {\r\n    doughnut(option(opt));\r\n}\r\n\r\nexport { Draw }"]}